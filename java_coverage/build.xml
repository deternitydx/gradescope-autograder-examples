<?xml version="1.0" encoding="UTF-8"?>

<!--
   Copyright (c) 2009, 2021 Mountainminds GmbH & Co. KG and Contributors
   This program and the accompanying materials are made available under
   the terms of the Eclipse Public License 2.0 which is available at
   http://www.eclipse.org/legal/epl-2.0

   SPDX-License-Identifier: EPL-2.0

   Contributors:
      Marc R. Hoffmann - initial API and implementation
-->

<project name="HW6 Autograder" default="rebuild" xmlns:jacoco="antlib:org.jacoco.ant">

	<description>
	  Example Ant build file that demonstrates how a JaCoCo coverage report
	  can be itegrated into an existing build in three simple steps.
	</description>

	<property name="src.dir" location="./src" />
	<property name="result.dir" location="./target" />
	<property name="result.classes.dir" location="${result.dir}/classes" />
	<property name="result.report.dir" location="${result.dir}/site/jacoco" />
	<property name="result.exec.file" location="${result.dir}/jacoco.exec" />

	<!-- Step 1: Import JaCoCo Ant tasks -->
	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
		<classpath path="./lib/jacocoant.jar" />
	</taskdef>

	<target name="clean">
		<delete dir="${result.dir}" />
	</target>

	<target name="compile">
		<mkdir dir="${result.classes.dir}" />
        <javac srcdir="${src.dir}" destdir="${result.classes.dir}" debug="true" includeantruntime="false">
            <classpath path="./lib/junit-4.12.jar" />
            <classpath path="./lib/hamcrest-core-1.3.jar" />
        </javac>
	</target>

    <target name="test" depends="compile">
        <!-- Step 2: Wrap test execution with the JaCoCo coverage task-->
        <jacoco:coverage destfile="${result.exec.file}" includes="*" excludes="*Test">
            <junit showoutput="true" printsummary="on" enabletestlistenerevents="true" fork="true">
                <classpath path="${result.classes.dir}" />
                <classpath path="./lib/junit-4.12.jar" />
                <classpath path="./lib/hamcrest-core-1.3.jar" />

                <formatter type="plain" usefile="false" />

                <batchtest fork="yes">
                    <fileset dir="${src.dir}">
                        <include name="*Test.java" />
                    </fileset>
                </batchtest>
            </junit>
        </jacoco:coverage>
	</target>

	<target name="report" depends="test">
		<!-- Step 3: Create coverage report -->
		<jacoco:report>

			<!-- This task needs the collected execution data and ... -->
			<executiondata>
				<file file="${result.exec.file}" />
			</executiondata>

			<!-- the class files and optional source files ... -->
			<structure name="HW6 Autograder">
				<classfiles>
                    <fileset dir="${result.classes.dir}">
                        <exclude name="*Test.class" />
                    </fileset>
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="${src.dir}">
                        <exclude name="*Test.java" />
                    </fileset>
				</sourcefiles>
			</structure>

			<!-- to produce reports in different formats. -->
			<html destdir="${result.report.dir}" />
			<csv destfile="${result.report.dir}/report.csv" />
			<xml destfile="${result.report.dir}/report.xml" />
		</jacoco:report>
	</target>

	<target name="rebuild" depends="clean,compile,test,report" />

</project>
